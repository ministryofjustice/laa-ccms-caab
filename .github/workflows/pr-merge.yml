# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Civil Applications And Billing Pipeline

on:
  pull_request:
    branches: [ main ]
    types: [ closed ]

permissions:
  contents: read
  packages: write

jobs:
  define-image-tag:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    # map a step output to job output
    outputs:
      tag_name: ${{ steps.extract_tag_name.outputs.tag_name }}
    steps:
      - name: Extract short repo name
        shell: bash
        run: echo "repo_name=${GITHUB_REPOSITORY#*\/laa-ccms-}-ui" >> $GITHUB_OUTPUT
        id: extract_repo_name
      - name: derive tag name
        shell: bash
        run: echo "tag_name=${{ steps.extract_repo_name.outputs.repo_name }}-${GITHUB_SHA::8}" >> $GITHUB_OUTPUT
        id: extract_tag_name

  build-test:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build & test
        run: ./gradlew build jacocoTestCoverageVerification
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}

      - name: Integration test
        run: ./gradlew integrationTest
        env:
          AWS_REGION: eu-west-2

      - name: upload jarfile
        uses: actions/upload-artifact@v4
        with:
          name: caab-jar
          path: build/libs/laa-ccms-caab-0.0.1-SNAPSHOT.jar

  vulnerability-report:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-22.04

    permissions:
      security-events: write

    env:
      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      SNYK_ORG: legal-aid-agency
      SNYK_TEST_EXCLUDE: build
      SNYK_TARGET_REFERENCE: main
      GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}

    steps:
      - uses: actions/checkout@v3
      - name: Generate Snyk report and upload to LAA Dashboard
        uses: snyk/actions/gradle@0.4.0
        continue-on-error: true
        with:
          command: monitor
          args: --org=$SNYK_ORG --all-projects --exclude=$SNYK_TEST_EXCLUDE --target-reference=$SNYK_TARGET_REFERENCE
      - name: Generate sarif Snyk report
        uses: snyk/actions/gradle@0.4.0
        continue-on-error: true
        with:
          args: --org=$SNYK_ORG --all-projects --exclude=$SNYK_TEST_EXCLUDE --target-reference=$SNYK_TARGET_REFERENCE --sarif-file-output=snyk-report.sarif
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
      - name: Fix undefined values
        run: |
          cat snyk-report.sarif | jq '
              .runs[].tool[].rules[]
              |= (
                  if .properties["security-severity"] == "undefined"
                  then .properties["security-severity"] =
                   (  if .shortDescription.text | test("(?i)critical") then "9.0"
                      elif .shortDescription.text | test("(?i)high") then "7.0"
                      elif .shortDescription.text | test("(?i)medium") then "4.0"
                      elif .shortDescription.text | test("(?i)low") then "0.1"
                      else ""
                      end
                   )
                   else .
                   end
               )
          ' > snyk-report-cleansed.sarif
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-report-cleansed.sarif
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}

  ecr:
    needs: [ build-test, vulnerability-report, define-image-tag ]
    runs-on: ubuntu-latest
    permissions:
      id-token: write # for requesting jwt
      contents: read  # for actions/checkout
    steps:
      # Checkout github repo
      - uses: actions/checkout@v3
      # Assume role in cloud platform
      - name: download jar
        uses: actions/download-artifact@v4
        with:
          name: caab-jar

      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.ECR_ROLE_TO_ASSUME }}
          aws-region: ${{ vars.ECR_REGION }}

      - name: Login ecr
        uses: aws-actions/amazon-ecr-login@v1
        id: login-ecr

      # Build and push docker image to container repo
      - name: Build and push image
        run: |
          docker build -t $REGISTRY/$REPOSITORY:${{ env.IMAGE_TAG }} .
          docker push $REGISTRY/$REPOSITORY:${{ env.IMAGE_TAG }}
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ vars.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ needs.define-image-tag.outputs.tag_name }}
          
      - name: delete artifact
        uses: geekyeggo/delete-artifact@v2
        with:
          name: caab-jar

  update-helm-chart:
    needs: [ ecr, define-image-tag ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout charts repo
        uses: actions/checkout@v3
        with:
          repository: ministryofjustice/laa-ccms-caab-helm-charts
          ref: development
          path: laa-ccms-caab-helm-charts
          token: ${{ secrets.REPO_TOKEN }}

      - name: update helm chart
        env:
          IMAGE_TAG: ${{ needs.define-image-tag.outputs.tag_name }}
        run: |
          echo "$IMAGE_TAG"
          cd laa-ccms-caab-helm-charts/laa-ccms-caab-service/charts/laa-ccms-caab-ui/
          yq eval-all "( .appVersion = \"${{ env.IMAGE_TAG }}\" )" -i Chart.yaml
          git config --global user.email "github@justice.gov.uk"
          git config --global user.name "GitHub Actions Bot"
          git add .
          git commit -m "update appVersion to ${{ env.IMAGE_TAG }}"
          git push origin

