# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Civil Applications And Billing Pipeline

on:
  push:
    branches-ignore:
      - main

permissions:
  contents: read
  packages: write

jobs:
  build-test:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build & test
        run: ./gradlew build
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}

      - name: Test coverage verification
        run: ./gradlew jacocoTestCoverageVerification

      - name: Integration test
        run: ./gradlew integrationTest
        env:
          AWS_REGION: eu-west-2

      - name: Upload checkstyle report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: checkstyle-report
          path: build/reports/checkstyle
          retention-days: 14

      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: build/reports/tests
          retention-days: 14

      - name: Upload jacoco coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-coverage-report
          path: build/reports/jacoco
          retention-days: 14

  vulnerability-scan:
    runs-on: ubuntu-22.04

    env:
      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      SNYK_ORG: legal-aid-agency
      SNYK_TEST_EXCLUDE: build
      SNYK_TARGET_REFERENCE: main

    steps:
      - uses: actions/checkout@v3
      - uses: snyk/actions/setup@0.4.0
      - name: Install snyk-delta
        run: |
          npm config set prefix '~/.local/'
          mkdir -p ~/.local/bin
          export PATH="$HOME/.local/bin/:$PATH"
          npm install -g snyk-delta
      - name: Identify new vulnerabilities
        run: ./snyk/snyk_delta_all_projects.sh --org=$SNYK_ORG --exclude=$SNYK_TEST_EXCLUDE --target-reference=$SNYK_TARGET_REFERENCE
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
      - name: Run code test
        uses: snyk/actions/gradle@0.4.0
        with:
          command: code test
          args: --org=${SNYK_ORG}
